anavos@unix1:~/cpe357/asgn5 $ valgrind ./a.out
==8276== Memcheck, a memory error detector
==8276== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==8276== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==8276== Command: ./a.out
==8276== 
==8276== Invalid read of size 1
==8276==    at 0x4E72037: ____strtol_l_internal (in /usr/lib64/libc-2.17.so)
==8276==    by 0x4E6E94F: atoi (in /usr/lib64/libc-2.17.so)
==8276==    by 0x40171D: main (in /home/anavos/cpe357/asgn5/a.out)
==8276==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==8276== 
==8276== 
==8276== Process terminating with default action of signal 11 (SIGSEGV)
==8276==  Access not within mapped region at address 0x0
==8276==    at 0x4E72037: ____strtol_l_internal (in /usr/lib64/libc-2.17.so)
==8276==    by 0x4E6E94F: atoi (in /usr/lib64/libc-2.17.so)
==8276==    by 0x40171D: main (in /home/anavos/cpe357/asgn5/a.out)
==8276==  If you believe this happened as a result of a stack
==8276==  overflow in your program's main thread (unlikely but
==8276==  possible), you can try to increase the size of the
==8276==  main thread stack using the --main-stacksize= flag.
==8276==  The main thread stack size used in this run was 8388608.
==8276== 
==8276== HEAP SUMMARY:
==8276==     in use at exit: 0 bytes in 0 blocks
==8276==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==8276== 
==8276== All heap blocks were freed -- no leaks are possible
==8276== 
==8276== For lists of detected and suppressed errors, rerun with: -s
==8276== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Segmentation fault
anavos@unix1:~/cpe357/asgn5 $ 
